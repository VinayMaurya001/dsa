Queue
What is Queue
	FIFO 
	Add topOfQueue,endOfQueue, rear
	Remove beginningOfQueue, start,front

Why Queue
	When we need FIFO 

Opearations on Queue
	Create()
	enQueue()
	deQueue()
	peekInQueue()
	isEmpty()
	isFull()
	deleteQueue()


Implementation options for Queue
Using Arrays
	Linear Queue
	Circular Queue
Using Linked List
	Linear Queue

Linear Queue using Arrays

Circular Queue using Arrays
Why Circular Queue?
	If we remove few element, space will be wasted.
	If at time of removal we shift all left element then deQueue() will be of O(n).
	So we need Circular Queue.
	
Circular Queue using LinkedList


Time & Space Complexity(Array vs Linked list implementation)
							Array			LinkedList
						Time	Space		Time	Space
Create()				O(1)	O(n)		O(1)	O(1)
enQueue()				O(1)	O(1)		O(1)	O(1)
deQueue()				O(1)	O(1)		O(1)	O(1)
peekInQueue()			O(1)	O(1)		O(1)	O(1)
isEmpty()				O(1)	O(1)		O(1)	O(1)
isFull()				O(1)	O(1)		O(1)	O(1)
deleteQueue()			O(1)	O(1)		O(1)	O(1)
isSpaceEfficient?				No					Yes


When to use Queue?
	FIFO
	Not easily corrupted(No one can easily insert data in middle )

When to avoid Queue?
	Random access not possible.If we have done any mistake then it is costly to rectify.
	
	