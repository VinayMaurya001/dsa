Data Types
	A data type in a programming language is a set of data with predefined values.
	At the top level, there are two types of data types:
 		System/Compiler-defined data types (also called Primitive data types)
 		User-defined data types.
 		
What is DS
	Data structure is a particular way of storing and organizing data in a computer so that it can be used efficiently. 
	DS is a way to organize the data in a way that enables it to be processed efficiently.
	Analogy
		Basket with fruits
	General data structure types include arrays, files, linked lists, stacks, queues, trees, graphs and so on.
	
Common DS
	Array
	LinkedList
	Stack
	Queue
		Autograph queue for actor
	Tree
		Family tree
	Graph
		Travelling Salesman Problem
	Hashing etc

Types of DS
	Primitive DS
		Integer
		Float
		Character
		Boolean
	Non-primitive DS
		Physics DS
			Array 
			LinkedList
		Logical DS
			Stack
			Queue
			Tree
			Graph
			Hashing
			
Depending on the organization of the elements, data structures are classified into two types:
		1) Linear data structures: 
		   Elements are accessed in a sequential order but it is not compulsory to store all elements sequentially (say, Linked Lists). 
		   Examples: LinkedLists, Stacks and Queues.
		2) Non â€“ linear data structures: 
		   Elements of this data structure are stored/accessed in a non-linear order. 
		   Examples: Trees and graphs.

Abstract Data Types (ADTs)
	To simplify the process of solving problems, we combine the data structures with their operations and we call this ADTs. 
	An ADT consists of two parts:
		1. Declaration of data
		2. Declaration of operations
	Commonly used ADTs include: Linked Lists, Stacks, Queues, Priority Queues, Binary Trees, Dictionaries, Disjoint Sets (Union and Find), Hash Tables, Graphs, and many others.
	So data structure is all about creating abstract data type.
	
Data Structure & Its Importance
	AI
	Big Data
	Hadoop
	Spark














Algorithm
	Algorithm is a process or set of rules to be followed in calculations or other problem-solving operations, especially by a computer.

An algorithm must have five properties:
	Input: O or more
	Output 1 or more
	Definiteness
		Each instruction of the algorithm should be clear and unambiguous.
	Effectiveness
		Every instruction must be basic enough to be carried out theoretically or by using paper and pencil.
	Finiteness
		The process should be terminated after a finite number of steps.
		
		
Types of algorithm 
The most fundamental types of algorithm are
	Brute Force algorithm.
	Recursive algorithms.
	Dynamic programming algorithm.
	Backtracking algorithm.
	Divide and conquer algorithm.
	Greedy algorithm.
	Randomized algorithm.

Brute-force
	Relying on or achieved through the application of force, effort, or power in usually large amounts 
	instead of more efficient, carefully planned, or precisely directed methods
		
Brute force approach
	Brute-force search or exhaustive search, also known as generate and test, 
	is a very general problem-solving technique that consists of systematically enumerating all possible candidates 
	for the solution and checking whether each candidate satisfies the problem's statement.
	Example:Linear Search

An in-place algorithm
An in-place algorithm is an algorithm that does not need an extra space and produces an output in the same memory 
	that contains the data by transforming the input 'in-place'. 
	However, a small constant extra space used for variables is allowed.

Stable Sorting Algorithm
A sorting algorithm is said to be stable if two objects with equal keys appear in the same order in sorted output 
	as they appear in the input array to be sorted. 
	Some sorting algorithms are stable by nature like Insertion sort, Merge Sort, Bubble Sort, etc.


 