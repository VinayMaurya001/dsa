Introduction

CareerMonk.com
	
Brute-force
	Relying on or achieved through the application of force, effort, or power in usually large amounts 
	instead of more efficient, carefully planned, or precisely directed methods
		
Brute force approach
	Brute-force search or exhaustive search, also known as generate and test, 
	is a very general problem-solving technique that consists of systematically enumerating all possible candidates 
	for the solution and checking whether each candidate satisfies the problem's statement.
	
If any errors are found, they will be updated at www.CareerMonk.com. 
You can monitor this site for any corrections and also for new problems and solutions. 
Also, please provide your valuable suggestions at: Info@CareerMonk.com.
	 
	
Other Books by Narasimha Karumanchi
	IT Interview Questions
	Elements of Computer Networking
	Data Structures and Algorithmic Thinking with Python
	Data Structures and Algorithms Made Easy (C/C++)
	Coding Interview Questions
	Data Structures and Algorithms for GATE
	Peeling Design Patterns

The objective of this chapter is to explain the importance of the analysis of algorithms, their
notations, relationships and solving as many problems as possible. 


1.1 Variables
	Variable names are the place-holders for representing the data.

1.2 Data Types
	A data type in a programming language is a set of data with predefined values.
	At the top level, there are two types of data types:
 		System/Compiler-defined data types (also called Primitive data types)
 		User-defined data types.
1.3 Data Structure
	 Data structure is a particular way of storing and organizing data in a computer so that it can be used efficiently. 
	 A data structure is a special format for organizing and storing data. 
	 General data structure types include arrays, files, linked lists, stacks, queues, trees, graphs and so on.
	 
	 Depending on the organization of the elements, data structures are classified into two types:
		1) Linear data structures: 
		   Elements are accessed in a sequential order but it is not compulsory to store all elements sequentially (say, Linked Lists). 
		   Examples: LinkedLists, Stacks and Queues.
		2) Non â€“ linear data structures: 
		   Elements of this data structure are stored/accessed in a non-linear order. 
		   Examples: Trees and graphs.
1.4 Abstract Data Types (ADTs)
	To simplify the process of solving problems, we combine the data structures with their operations and we call this ADTs. 
	An ADT consists of two parts:
		1. Declaration of data
		2. Declaration of operations
	Commonly used ADTs include: Linked Lists, Stacks, Queues, Priority Queues, Binary Trees, Dictionaries, Disjoint Sets (Union and Find), Hash Tables, Graphs, and many others.
	So data structure is all about creating abstract data type.

	Data Structure & Its Importance
	AI
	Big Data
	Hadoop
	Spark
