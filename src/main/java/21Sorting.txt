Sorting
What is Sorting?
Types of Sorting
Sorting Terminologies
Why we learn so many of sorting techniques?
Sorting Algorithms
	Bubble Sort
	Selection Sort
	Insertion Sort
	Bucket Sort
	Merge Sort
	Quick Sort
	Heap Sort
	Topological Sort
	
Comparisons of Sorting Algorithms


What is Sorting?    
	Arranging data in particular format, either in ascending order or desceding order
	Height of man
Practical uses of sorting
	Microsoft Excel
		Has an inbuilt functionality to sort data
	Online Store like amazon
	
Types of Sorting
On the basis of Space used
	 InPlace
	 	Sorting Algorithms which does not requires any extra spaces for sprting
	 	Bubble Sort
	 Outplace
	 	Merge Sort
On the basis of Stability
	Stable
		If a sorting algorithm after sorting the contents does not change the sequence of similar content 
			in which they appear, is called stable sorting.
		Stability of sorting algo is matters where sort key is not the entire identity of item.
		Insertion Sort
	Unstable
		Quick Sort
	Example 
			A person(age & name) list.
			Lat's say we sorted based on their name. 
			If we were to then sort by age in a stable way we's guarantee that our original ordering would be preserved for people with the sam eage.
	group by clause of SQL query uses this concept heavily. 

Sorting Terminologies
Increasing Order
	successive eleement is >predesessor element
Non-Increasing Order
	successive eleement is >=predesessor element
Decreasing Order
	successive eleement is <predesessor element
Non-Decreasing Order
	successive eleement is <=predesessor element
	
	
Why we learn so many Sorting Algorithms?
Every sorting algorithms comes with its set of Pros & Cons. So we need to use specific sorting technique as per the solution.
	Do we have a special requirement of stability
	Is Space is priority to us
	Is Time is priority to us.
	
	
	
Bubble Sort
Bubble Sort is also known as Sinking Sort.
Repeatedly steps through the list to be sorted, compares each pairs of adjacent items & swaps them if they are in the wrong order.
Time Complexity O(n^2)
Space Complexity O(1)
Inplace Sorting Algorithm
When to use
	When input is already sorted
	Space is a concern
	Easy to implement
When not to use
	Average case time complexity is poor
	
Selection Sort
It is based on the idea of finding the min/max element in an unsorted array 
	& then putting it in its correct position in a sorted array.
Time Complexity O(n^2)
Space Complexity O(1)
When to use
	When we don't have additional memory
	Easy to implement
When not to use
	When time complexity is a concern
	
Insertion Sort
We divide array in 2 parts: Sorted & unsorted array
Then from unsorted we pick the first element & find its correct position in the sorted array.
Repeat till unsorted array is not empty.
Time Complexity O(n^2)
Space Complexity O(1)
When to use
	Best when we have continious flow of numbers & we want to keep the list sorted
	When we don't have additional memory
	Easy to implement
When not to use
	When average time complexity is a concern
	
	
	